apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'at.grahsl.kafka.connect'
version = '1.3.0-SNAPSHOT'

description = """kafka-connect-mongodb"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.3'
    }
}

processResources {
    expand(project.properties)
}

def skipIntegrationTest = 'true'
test {
    if (skipIntegrationTest.toBoolean()) {
        exclude '**/*IT.class'
    }
}

task copyJarToTarget(type: Copy, dependsOn:[jar, shadowJar]) {
    description 'Copies jar files to target directory'
    copy {
        from 'build/libs'
        into 'target'
        include '**/*.jar'
    }
}

repositories {
    maven { url "http://packages.confluent.io/maven/" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

ext {
    kafkaVersion='2.2.0'
    mongodbDriverVersion='3.10.1'
    logbackVersion='1.2.3'
    jacksonVersion='2.9.8'
    confluentSerializerVersion='5.2.0'
    confluentConnectPluginVersion='0.11.1'
    junitJupiterVersion='5.4.1'
    junitPlatformVersion='1.4.1'
    hamcrestVersion='2.0.0.0'
    mockitoVersion='2.25.1'
    testcontainersVersion='1.11.1'
    avroVersion='1.8.2'
    okHttpVersion='3.14.0'
    yamlBeansVersion='1.13'
}

dependencies {
    compile "org.apache.kafka:connect-api:${kafkaVersion}"
    compile "org.mongodb:mongodb-driver:${mongodbDriverVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    testCompile "com.github.jcustenborder.kafka.connect:connect-utils:[0.2.31,0.2.1000)"
    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "io.confluent:kafka-avro-serializer:${confluentSerializerVersion}"
    compile "io.confluent:kafka-connect-maven-plugin:${confluentConnectPluginVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testCompile "org.junit.vintage:junit-vintage-engine:${junitJupiterVersion}"
    testCompile "org.junit.platform:junit-platform-runner:${junitPlatformVersion}"
    testCompile "org.junit.platform:junit-platform-console:${junitPlatformVersion}"
    testCompile "org.hamcrest:hamcrest-junit:${hamcrestVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.testcontainers:testcontainers:${testcontainersVersion}"
    testCompile "org.apache.avro:avro:${avroVersion}"
    testCompile "org.apache.avro:avro-maven-plugin:${avroVersion}"
    testCompile "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    testCompile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
    testCompile "com.esotericsoftware.yamlbeans:yamlbeans:${yamlBeansVersion}"
}
